apply plugin: 'com.android.application'
//apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}
def getDate2() {
    def date = new Date()
    def formattedDate = date.format('yyyy-MM-dd HH:mm')
    return formattedDate
}

android {


    configurations {
        //排除 prism4j 里的
        compile.exclude group: 'org.jetbrains' , module:'annotations-java5'
    }

    dataBinding {
        enabled = true
    }

    //修改生成的apk名字
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def appName = "ZiTaiShiBie_v";
            def releaseApkName = appName + defaultConfig.versionName + '_' + variant.productFlavors[0].name + '_release_signed_' + getDate() + '.apk';
            outputFileName = releaseApkName;
        }
    }

    dexOptions {
        javaMaxHeapSize "2048M"
    }

    tasks.whenTaskAdded { task ->
        if (task.name.contains('AndroidTest')) {
            task.enabled = false
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'LICENSE.txt'
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main() {
            java.srcDirs = ['src/main/java', 'src/main/java-greendao-gen']//第二个是greendao的

        }

        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    flavorDimensions "channel"
    productFlavors {  //所有需要打包的渠道,debug时带的名字会取字母升序排序第一个flavors
        //baidu {}             //百度
        //official {}          //官网
        //qh360 {}             //奇虎360
        //qq {}                //应用宝
        //huawei {}            //华为
        //vivo  {}             //Vivo
        //meizu {}            //魅族
        //lenovo {}            //联想
        //xiaomi {}            //小米


        AOfficial {
            manifestPlaceholders = [CHANNEL_VALUE: "AOfficial"]
            dimension "channel"
        }
        BBaidu {
            manifestPlaceholders = [CHANNEL_VALUE: "BBaidu"]
            dimension "channel"
        }
        C360 {
            manifestPlaceholders = [CHANNEL_VALUE: "C360"]
            dimension "channel"
        }
        DYingyongbao {
            manifestPlaceholders = [CHANNEL_VALUE: "DYingyongbao"]
            dimension "channel"
        }
        EOppo {
            manifestPlaceholders = [CHANNEL_VALUE: "EOppo"]
            dimension "channel"
        }
        FViVo {
            manifestPlaceholders = [CHANNEL_VALUE: "FViVo"]
            dimension "channel"
        }
        GALi {
            manifestPlaceholders = [CHANNEL_VALUE: "GALi"]
            dimension "channel"
        }
        HXiaoMi {
            manifestPlaceholders = [CHANNEL_VALUE: "HXiaoMi"]
            dimension "channel"
        }
        IHuaWei {
            manifestPlaceholders = [CHANNEL_VALUE: "IHuaWei"]
            dimension "channel"
        }

    }

    signingConfigs {
        // your debug keystore
        debug {
            storeFile file("cgb.keystore")

            storePassword '123456'
            keyAlias 'cgb'
            keyPassword '123456'

        }
        release {
            storeFile file("cgb.keystore")

            storePassword '123456'
            keyAlias 'cgb'
            keyPassword '123456'


        }
    }
    compileSdkVersion 30

    defaultConfig {

        ndk {
            abiFilters "armeabi-v7a" // "armeabi", "x86", "arm64-v8a"
        }

        applicationId "com.ilinklink.ztsb.easy"
        minSdkVersion 23
        multiDexEnabled true
        targetSdkVersion 30

        versionCode 11
        versionName "0.01"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        setProperty("archivesBaseName", "vision-quickstart")








        buildConfigField "String", "DB_NAME", "\"tigan_db\""  //数据库库名

        buildConfigField "String", "MOB_SMS_KEY", "\"1710845a1b0e8\""  //MOB_KEY
        buildConfigField "String", "MOB_SMS_SECRET", "\"ace7f4bca47905b34ac50d6e39e13297\""
        //MOB_SECRET

        buildConfigField "String", "WX_APP_ID", "\"wxabd7c0c003f0ee7e\"" //微信
        buildConfigField "String", "WX_APP_SECRET", "\"2b77b01ba0a46edb03009c41881c98ca\""
        //微信secret

        buildConfigField "String", "WX_PARTNER_ID", "\"1391890602\"" //微信合作者id
        buildConfigField "String", "WX_API_KEY", "\"bb9ab5c2b7c024dec28a2eedaadb1276\"" //微信api_key

        buildConfigField "String", "QQ_APP_ID", "\"1105701230\"" //qq
        buildConfigField "String", "HCP_WEB_URL", "\"http://www.qiaojiangnenggong.com\"" //官网

        buildConfigField "String", "BUILD_TIME","\""+getDate2()+"\""

        buildConfigField "int", "Compress_Bitmap", "64"

        buildConfigField "String", "FILE_ROOT_NAME", "\"ziTaiShiBie\""
        buildConfigField "String", "SESSION_ERROR_CODE", "\"000003\"" //session过期的错误码,多个

        buildConfigField "Boolean", "BLUETOOTH_SD_CARD_LOG_FILE", "true"     //以txt存储日志

        /**配置manifest里的常量**/
        manifestPlaceholders = [
                JPUSH_APP_ID    : "411a51f9642b0b74a620bde3",
                JPUSH_APP_SECRET: "5a2aa9def491189d451ef8f4",

                //环信
                EASEMOB_APPKEY  : "ngqj#ngqj",

                //高德 4ee13afcfb84596f2e3bc896ac591249
                GAODE_MAP_KEY   : "0560bf3dfb7e549d5afd2e4152637bf1",
                PACKAGE_NAME    : applicationId,

                //UMENG_APPKEY    : "57c4e87767e58eca1b000fab",
                UMENG_APPKEY    : "58b62590e88bad71690030b5",

                XG_ACCESS_ID    : "2100276810",
                XG_ACCESS_KEY   : "AE6LA2H882UH",
        ]


    }
    buildTypes {
        release {
            buildConfigField "Boolean", "LOG_SWITCH", "true"
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField "Boolean", "LOG_SWITCH", "true"
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // Do NOT compress tflite model files (need to call out to developers!)
    aaptOptions {
        noCompress "tflite"
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}
repositories {
    // Depending on AndroidX Snapshot Builds to get the latest CameraX libs.
    maven { url 'https://androidx.dev/snapshots/builds/6787662/artifacts/repository/' }
}

dependencies {
    implementation fileTree( include: ['*.jar','*.aar'], dir: 'libs')
    compileOnly(name:'poseSDK-release5',ext:'aar')

    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'


    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.4.31'
    implementation 'androidx.multidex:multidex:2.0.1'

    // Barcode model
    implementation 'com.google.mlkit:barcode-scanning:17.0.0'
    // Or comment the dependency above and uncomment the dependency below to
    // use unbundled model that depends on Google Play Services
    // implementation 'com.google.android.gms:play-services-mlkit-barcode-scanning:16.2.1'

    // Object detection feature with bundled default classifier
    implementation 'com.google.mlkit:object-detection:16.2.6'

    // Object detection feature with custom classifier support
    implementation 'com.google.mlkit:object-detection-custom:16.3.3'

    // Face features
    implementation 'com.google.mlkit:face-detection:16.1.2'
    // Or comment the dependency above and uncomment the dependency below to
    // use unbundled model that depends on Google Play Services
    // implementation 'com.google.android.gms:play-services-mlkit-face-detection:16.2.0'

    // Text features
    implementation 'com.google.android.gms:play-services-mlkit-text-recognition:17.0.0'
    // Or comment the dependency above and uncomment the dependency below to
    // use bundled model.
    // implementation 'com.google.mlkit:text-recognition:16.0.0-beta1'
    implementation 'com.google.mlkit:text-recognition-chinese:16.0.0-beta1'
    implementation 'com.google.mlkit:text-recognition-devanagari:16.0.0-beta1'
    implementation 'com.google.mlkit:text-recognition-japanese:16.0.0-beta1'
    implementation 'com.google.mlkit:text-recognition-korean:16.0.0-beta1'

    // Image labeling
    implementation 'com.google.mlkit:image-labeling:17.0.5'
    // Or comment the dependency above and uncomment the dependency below to
    // use unbundled model that depends on Google Play Services
    // implementation 'com.google.android.gms:play-services-mlkit-image-labeling:16.0.5'

    // Image labeling custom
    implementation 'com.google.mlkit:image-labeling-custom:16.3.1'

    // Pose detection with default models
    implementation 'com.google.mlkit:pose-detection:17.0.1-beta5'
    // Pose detection with accurate models
    implementation 'com.google.mlkit:pose-detection-accurate:17.0.1-beta5'

    // Selfie segmentation
    implementation 'com.google.mlkit:segmentation-selfie:16.0.0-beta2'

    implementation 'com.google.mlkit:camera:16.0.0-beta1'

    // -------------------------------------------------------

    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.guava:guava:27.1-android'
    implementation files('libs\\tbs_sdk_thirdapp_v3.6.0.1249_43610_sharewithdownload_withoutGame_obfs_20180608_114954.jar')

    // For how to setup gradle dependencies in Android X, see:
    // https://developer.android.com/training/testing/set-up-project#gradle-dependencies
    // Core library
    androidTestImplementation 'androidx.test:core:1.3.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:2.3.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel:2.3.1"

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.annotation:annotation:1.2.0'
    //implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    // CameraX
    implementation "androidx.camera:camera-camera2:1.0.0-SNAPSHOT"
    implementation "androidx.camera:camera-lifecycle:1.0.0-SNAPSHOT"
    implementation "androidx.camera:camera-view:1.0.0-SNAPSHOT"

    // On Device Machine Learnings
    implementation "com.google.android.odml:image:1.0.0-beta1"


    configurations {
        all*.exclude group: 'com.android.support', module: 'support-v4'
        all*.exclude group: 'com.android.support', module: 'support-v7'
        all*.exclude group: 'com.amap.api.services.district', module: 'support-v7'
    }

    //GreenDao
    implementation 'de.greenrobot:greendao:1.3.7'

    //沉浸式
    implementation 'com.gyf.immersionbar:immersionbar:2.3.3-beta15'
    //权限请求框架
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

    //红点控件,右上角标红点
    implementation 'cn.bingoogolapple:bga-badgeview:1.1.3'

    //implementation 'com.sscl:serialportlibrary:0.0.3'
    implementation 'com.github.freyskill:SerialPortHelper:v1.0.1'

    //圆角rclayout
    implementation 'com.gcssloop.widget:rclayout:1.8.1'

    //二维码
//    implementation 'com.github.open-android:Zxing:+'

    //尺子
    implementation 'com.github.superSp:RulerView:v1.2'

    //lib
    //refresh views
    api 'in.srain.cube:ultra-ptr:1.0.11'
    //    //com.android.support
    //    api 'com.android.support:recyclerview-v7:27.1.1'
    //    api 'com.android.support:appcompat-v7:27.1.1
    //RxJava + RetroFit
    api 'com.squareup.okhttp3:okhttp:3.2.0'
    api 'com.squareup.okhttp3:logging-interceptor:3.2.0'
    api 'com.squareup.retrofit2:retrofit:2.0.0'
    annotationProcessor 'com.squareup.retrofit2:retrofit:2.0.0'
    api 'com.squareup.retrofit2:converter-gson:2.0.0'
    api 'com.squareup.retrofit2:adapter-rxjava:2.0.0'
    api 'io.reactivex:rxjava:1.1.0'
    api 'io.reactivex:rxandroid:1.1.0'
    api 'io.reactivex:rxjava:1.0.10'
    api 'com.jakewharton.rxbinding:rxbinding:0.4.0'
    //Glide
    api 'com.github.bumptech.glide:glide:3.7.0'
    //刷新控件
    api 'in.srain.cube:ultra-ptr:1.0.11'
    api 'in.srain.cube:grid-view-with-header-footer:1.0.12'
    //    api 'in.srain.cube:ptr-load-more:1.0.6'
    api 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.34'
    //模糊效果
    api 'jp.wasabeef:blurry:3.0.0'
    //悬浮效果
    api 'com.linklink.views:ScrollviewWithinRecyclerviewAndFloatView:1.1.3'
    //utilscode
    api 'com.blankj:utilcode:1.22.5'
    //google flexbox
    api 'com.google.android:flexbox:0.3.2'
    //ZoomImageView
//    api 'com.github.chrisbanes:PhotoView:2.1.4'


    /***
     * 微视人脸识别start
     */
    compileOnly(name: 'FacePassAndroidSDK-year-release', ext: 'aar')
    compileOnly('org.apache.httpcomponents:httpmime:4.3') {
        exclude module: "httpclient"
    }
    api 'com.android.volley:volley:1.0.0'
    api 'org.apache.httpcomponents:httpcore:4.3.3'


    /***
     * 微视人脸识别end
     */
}

configurations {
    // Resolves dependency conflict caused by some dependencies use
    // com.google.guava:guava and com.google.guava:listenablefuture together.
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}
